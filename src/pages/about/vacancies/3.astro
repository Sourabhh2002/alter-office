---
import PreHeadline from "@components/about/PreHeadline.astro";
import Tagline from "@components/about/Tagline.astro";
import Vacancies from "@layouts/about/Vacancies.astro";

const itemsList1 = [
  "NodeJS",
  "React",
  "React Native",
  "JavaScript",
  "Rust",
  "GoLang",
];

const itemsList2 = [
  "Unity",
  "Flutter",
  "MySQL",
  "Python",
  "Swift UI",
  "Java",
  "NextJS",
];
---

<Vacancies prevPage="/about/vacancies/2" nextPage="/about/vacancies/4">
  <!-- Main content -->
  <main class="w-full mt-[40px] px-4 lg:px-[75px]">
    <PreHeadline class="text-center text-[#ffffff]"
      >Oh, you're into coding!</PreHeadline
    >
    <div
      class="font-HamonBold text-[clamp(3.5rem,2.786rem+3.571vw,6rem)] leading-[clamp(3rem,2.446rem+2.768vw,4.938rem)] text-white text-center"
    >
      <p>Which technologies that you know</p>
      <p>for sure that someone can pay you</p>
      <p>for that knowledge?</p>
    </div>

    <Tagline class="mt-6 text-center mx-auto"
      >Select all technologies that you know, max 5</Tagline
    >

    <div class="overflow-hidden w-full absolute left-0 right-0 mt-6">
      <div class="flex gap-4 w-max carousel-track">
        {
          itemsList1.concat(itemsList1).map((item) => (
            <a
              href="/about/vacancies/3"
              class="h-[134px] sm:h-[168px] bg-white text-[#E51A22] font-HamonBold text-[94px] leading-[80px] relative px-7 break-all cursor-pointer flex items-center justify-center"
            >
              <p class="relative top-1">{item}</p>
            </a>
          ))
        }
      </div>

      <div class="flex gap-4 w-max carousel-track mt-4">
        {
          itemsList2.concat(itemsList2).map((item) => (
            <a
              href="/about/vacancies/3"
              class="h-[134px] sm:h-[168px] bg-white text-[#E51A22] font-HamonBold text-[94px] leading-[80px] relative px-7 break-all cursor-pointer flex items-center justify-center"
            >
              <p class="relative top-1">{item}</p>
            </a>
          ))
        }
      </div>
    </div>
  </main>

  <style>
    @keyframes scroll {
      from {
        transform: translateX(0);
      }
      to {
        transform: translateX(-50%);
      }
    }

    .carousel-track {
      animation: scroll 15s linear infinite;
    }

    .carousel-track:hover {
      animation-play-state: paused;
    }
  </style>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const track = document.querySelector(".carousel-track") as HTMLElement;

      track?.addEventListener("mouseenter", () => {
        track.style.animationPlayState = "paused";
      });

      track?.addEventListener("mouseleave", () => {
        track.style.animationPlayState = "running";
      });
    });
  </script>
</Vacancies>
